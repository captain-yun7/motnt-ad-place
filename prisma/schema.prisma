generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Category {
  id          String   @id @default(cuid())
  name        String   @unique
  description String?
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
  ads         Ad[]

  @@map("categories")
}

model District {
  id        String   @id @default(cuid())
  name      String   @unique
  city      String   @default("서울")
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  ads       Ad[]

  @@map("districts")
}

model Ad {
  id          String    @id @default(cuid())
  title       String
  slug        String    @unique
  description String?
  isActive    Boolean   @default(true)

  // Phase 1: 상태 및 우선순위 관리
  status      AdStatus  @default(ACTIVE)
  featured    Boolean   @default(false)
  tags        String[]  @default([])

  // Phase 1: 통계 정보
  viewCount     Int     @default(0)
  favoriteCount Int     @default(0)
  inquiryCount  Int     @default(0)

  // Phase 1: 검증 정보
  verified      Boolean   @default(false)
  verifiedAt    DateTime?

  location    Json
  specs       Json
  pricing     Json      // { monthly, weekly, daily, deposit, minimumPeriod, discounts, additionalCosts }
  availability Json?     // { availableDates, bookedDates, bookingStatus }
  metadata    Json?

  categoryId  String
  districtId  String
  createdAt   DateTime  @default(now())
  updatedAt   DateTime  @updatedAt

  images      AdImage[]
  inquiries   Inquiry[]
  category    Category  @relation(fields: [categoryId], references: [id])
  district    District  @relation(fields: [districtId], references: [id])

  @@map("ads")
}

enum AdStatus {
  DRAFT       // 임시저장
  ACTIVE      // 활성
  INACTIVE    // 비활성
  SOLD_OUT    // 매진
  EXPIRED     // 기간만료
}

model AdImage {
  id        String   @id @default(cuid())
  url       String
  alt       String?
  order     Int      @default(0)
  adId      String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  ad        Ad       @relation(fields: [adId], references: [id], onDelete: Cascade)

  @@map("ad_images")
}

model Admin {
  id        String   @id @default(cuid())
  email     String   @unique
  name      String
  role      String   @default("admin")
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  @@map("admins")
}

// 문의 관리
model Inquiry {
  id        String        @id @default(cuid())
  adId      String
  ad        Ad            @relation(fields: [adId], references: [id], onDelete: Cascade)

  // 문의자 정보
  name      String
  email     String
  phone     String?
  company   String?       // 회사명

  // 문의 내용
  message   String
  type      InquiryType   @default(GENERAL)

  // 상태 관리
  status    InquiryStatus @default(PENDING)
  repliedAt DateTime?
  reply     String?

  createdAt DateTime      @default(now())
  updatedAt DateTime      @updatedAt

  @@map("inquiries")
  @@index([adId])
  @@index([email])
}

enum InquiryType {
  GENERAL     // 일반 문의
  PRICE       // 가격 문의
  BOOKING     // 예약 문의
  TECHNICAL   // 기술 문의
}

enum InquiryStatus {
  PENDING     // 대기중
  REPLIED     // 답변완료
  CLOSED      // 종료
}
